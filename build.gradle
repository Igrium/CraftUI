plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    id "io.freefair.lombok" version "8.13.1"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        url "https://maven.nucleoid.xyz/"
        name "Nucleoid"
    }
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    runs {
        testmodClient {
            client()
            name = "Testmod Client"
            source sourceSets.testmod
        }
    }
    createRemapConfigurations(sourceSets.testmod)
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

    // Dear ImGui
    api include("io.github.spair:imgui-java-binding:${project.imgui_version}")
    implementation include("io.github.spair:imgui-java-natives-windows:${project.imgui_version}")
    implementation include("io.github.spair:imgui-java-natives-linux:${project.imgui_version}")
    implementation include("io.github.spair:imgui-java-natives-macos:${project.imgui_version}")
    api include("io.github.spair:imgui-java-lwjgl3:${project.imgui_version}")

    api include("org.lwjgl:lwjgl-nfd:3.3.2")
    implementation include("org.lwjgl:lwjgl-nfd:3.3.2:natives-windows")
    implementation include("org.lwjgl:lwjgl-nfd:3.3.2:natives-macos")
    implementation include("org.lwjgl:lwjgl-nfd:3.3.2:natives-linux")

    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}